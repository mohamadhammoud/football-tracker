{"version":3,"sources":["Components/Header/ViewHeader.tsx","Api/football-API.ts","Components/CustomComponents/CustomCarousel.tsx","Components/CountriesLeagues/FootballHistory.tsx","Components/CountriesLeagues/ViewCountryLeagues.tsx","Components/CustomComponents/GobackButton.tsx","Components/LeaguesStanding/ViewLeagueStanding.tsx","Components/TeamInformation/ViewTeamInformation.tsx","Components/PlayerInfo/ViewPlayerInfo.tsx","App.tsx","index.tsx"],"names":["ViewHeader","className","style","color","xs","offset","span","footballApi","axios","create","baseURL","getAllCompetitions","a","get","response","data","getStandingById","id","getTeamById","getPlayerById","contentStyle","height","lineHeight","textAlign","background","borderRadius","CustomCarousel","autoplay","fontSize","TrophyFilled","UpCircleFilled","DownCircleFilled","DatabaseFilled","VideoCameraFilled","SaveFilled","FootballHistory","ViewCountryLeagues","history","useHistory","useState","competitions","setCompetitions","searchedCompetitions","setSearchedCompetitions","useEffect","error","requestForAllCompetitions","columns","title","dataIndex","key","width","render","value","record","onClick","push","backgroundColor","justify","md","onChange","e","filteredResult","filter","competition","region","toLowerCase","includes","searchToCompetition","target","bordered","pagination","pageSize","dataSource","length","scroll","x","rowKey","row","name","GobackButton","paddingBottom","goBack","type","ViewLeagueStanding","useParams","setData","callStandingsById","sorter","b","position","overall_gp","overall_w","overall_d","overall_l","CaretUpFilled","translate","undefined","MinusCircleFilled","CaretDownFilled","points","_","team_id","FolderOpenFilled","country","season","TabPane","Tabs","ViewTeamInformation","teamId","teamData","setTeamData","callTeamInfoById","number","age","appearences","goals","assists","injured","minutes","yellowcards","redcards","defaultActiveKey","tab","founded","is_national","leagues","map","league","coach_name","venue_city","venue_address","venue_name","venue_surface","squad","ViewPlayerInfo","playerId","playerInfo","setPlayerInfo","callPlayerById","clubColumns","appearances","firstname","lastname","common_name","nationality","birthdate","birthcountry","birthplace","player_statistics","club","cups","national","transfers","from","to","date","App","requestEvents","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d2eaef73.chunk.js","sourcesContent":["import { Col, Row } from 'antd'\r\nimport soccerImage from '../../assets/updated-standings.jpg';\r\nimport React from 'react'\r\n\r\nconst ViewHeader = () => {\r\n    return (\r\n        <Row className=\"header background-color-blue map-shadow\" style={{ color: \"white\" }}>\r\n            <Col xs={{ offset: 2, span: 22 }} className=\"font-size-20\">\r\n                {/* <img\r\n                    height={36}\r\n                    width={36}\r\n                    style={{ borderRadius: 50 }}\r\n                    src={soccerImage}\r\n                    alt=\"\"\r\n                /> */}\r\n                &nbsp;\r\n                &nbsp;\r\n                Football Standings Tracker\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ViewHeader\r\n","import axios from \"axios\";\r\n\r\nconst footballApi = axios.create({\r\n    baseURL: \"https://data.football-api.com/v3\"\r\n})\r\n\r\nexport const getAllCompetitions = async () => {\r\n\r\n    try {\r\n        const response = await footballApi.get(\"/competitions?Authorization=cfnR6LWc4i4MDFLlPJrajoa465c4qjF594kpIy4b\");\r\n        return [null, response.data];\r\n    } catch (error) {\r\n        return [error, null];\r\n    }\r\n}\r\nexport const getStandingById = async (id: string) => {\r\n\r\n    try {\r\n        const response = await footballApi.get(`/standings/${id}?Authorization=cfnR6LWc4i4MDFLlPJrajoa465c4qjF594kpIy4b`);\r\n        return [null, response.data];\r\n    } catch (error) {\r\n        return [error, null];\r\n    }\r\n}\r\n\r\nexport const getTeamById = async (id: string) => {\r\n\r\n    try {\r\n        const response = await footballApi.get(`teams/${id}?Authorization=cfnR6LWc4i4MDFLlPJrajoa465c4qjF594kpIy4b`);\r\n        return [null, response.data];\r\n    } catch (error) {\r\n        return [error, null];\r\n    }\r\n}\r\nexport const getPlayerById = async (id: string) => {\r\n\r\n    try {\r\n        const response = await footballApi.get(`/players/${id}?Authorization=cfnR6LWc4i4MDFLlPJrajoa465c4qjF594kpIy4b`);\r\n        return [null, response.data];\r\n    } catch (error) {\r\n        return [error, null];\r\n    }\r\n}\r\n//AIzaSyBuiSKaH-pu_u5agz2dZktRNzlW5Y74nWI","import { DatabaseFilled, DownCircleFilled, SaveFilled, TrophyFilled, UpCircleFilled, VideoCameraFilled } from '@ant-design/icons';\r\nimport { Carousel } from 'antd';\r\nimport React from 'react'\r\n\r\nconst contentStyle = {\r\n    height: '100px',\r\n    color: 'white',\r\n    lineHeight: '80px',\r\n    textAlign: 'center',\r\n    background: '#364d79',\r\n    borderRadius: 10\r\n} as any;\r\n\r\nconst CustomCarousel = () => {\r\n    return (\r\n        <Carousel style={contentStyle} className=\"carousel-shadow\" autoplay>\r\n            <div>\r\n                <h3 style={{ color: \"white\", fontSize: 24 }}><TrophyFilled /> &nbsp; Best 10 Leagues over world! &nbsp;<TrophyFilled /> </h3>\r\n            </div>\r\n            <div>\r\n                <h3 style={{ color: \"white\", fontSize: 24 }}> <UpCircleFilled /> &nbsp; All Standings and Statistics. &nbsp; <DownCircleFilled />   </h3>\r\n            </div>\r\n            <div>\r\n                <h3 style={{ color: \"white\", fontSize: 24 }}> <DatabaseFilled /> &nbsp; Team Information. &nbsp;<DatabaseFilled /></h3>\r\n            </div>\r\n            <div>\r\n                <h3 style={{ color: \"white\", fontSize: 24 }}> <VideoCameraFilled /> &nbsp; Players Life. &nbsp;<SaveFilled /></h3>\r\n            </div>\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default CustomCarousel\r\n","import React from 'react'\r\n\r\nconst FootballHistory = () => {\r\n    return (\r\n        <div className=\"padding-10 background-color-gray\">\r\n            <h1 className=\"FootballHistory-h1\">\r\n                The history of football (soccer)\r\n            </h1>\r\n            <p className=\"FootballHistory-p\">\r\n                Football (or soccer as the game is called in some parts of the world) has a long history. Football in its current form arose in England in the middle of the 19th century. But alternative versions of the game existed much earlier and are a part of the football history.\r\n            </p>\r\n            <hr />\r\n            <h1 className=\"FootballHistory-h1\">\r\n                The first football clubs\r\n            </h1>\r\n            <p className=\"FootballHistory-p\">\r\n                Football clubs have existed since the 15th century, but unorganized and without official status. It is therefore hard to decide which the first football club was. Some historians suggest that it was the Foot-Ball Club formed 1824 in Edinburgh. Early clubs were often formed by former school students and the first of this kind was formed in Sheffield in 1855. The oldest among professional football clubs is the English club Notts County that was formed in 1862 and still exists today.\r\n\r\n                An important step for the emergence of teams was the industrialization that led to larger groups of people meeting at places such as factories, pubs and churches. Football teams were established in the larger cities and the new railroads could bring them to other cities.\r\n\r\n                In the beginning, football was dominated by public school teams, but later, teams consisting by workers would make up the majority. Another change was successively taking place when some clubs became willing to pay the best players to join their team. This would be the start of a long period of transition, not without friction, in which the game would develop to a professional level.\r\n\r\n                The motivation behind paying players was not only to win more matches. In the 1880s the interest in the game has moved ahead to a level that tickets were sold to the matches. And finally, in 1885 professional football was legalized and three years later the Football League was established. During the first season, 12 clubs joined the league, but soon more clubs became interested and the competition would consequently expand into more divisions.\r\n\r\n                For a long time, the British teams would be dominant. After some decades, clubs from Prague, Budapest and Sienna would be the primarily contenders to the British dominance.\r\n\r\n                As with many things in history, women were for a long time excluded from participating in games. It was not before the late 19th century that women started to play football. The first official women's game took place in Inverness in 1888.\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FootballHistory\r\n","import { Button, Carousel, Col, Divider, Input, Row, Table } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { getAllCompetitions } from '../../Api/football-API';\r\nimport CustomCarousel from '../CustomComponents/CustomCarousel';\r\nimport TextDivider from '../CustomComponents/TextDivider';\r\nimport FootballHistory from './FootballHistory';\r\n\r\nconst ViewCountryLeagues = () => {\r\n    const history = useHistory();\r\n    const [competitions, setCompetitions] = useState([]);\r\n    const [searchedCompetitions, setSearchedCompetitions] = useState([]);\r\n\r\n    const searchToCompetition = (value: string) => {\r\n        const filteredResult = competitions.filter((competition: any) => competition.region.toLowerCase().includes(value.toLowerCase()))\r\n        setSearchedCompetitions(filteredResult);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const requestForAllCompetitions = async () => {\r\n            const [error, data] = await getAllCompetitions();\r\n            if (!error) {\r\n                setCompetitions(data);\r\n            }\r\n        }\r\n        requestForAllCompetitions();\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Region',\r\n            dataIndex: 'region',\r\n            key: 'region',\r\n        },\r\n        {\r\n            title: 'League Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 300,\r\n            render: (value: string, record: any) => (<Button\r\n                // type=\"\"\r\n                className=\"background-color-orange\"\r\n                onClick={() => history.push(`/standings/${record.id}`)}\r\n                style={{ borderRadius: 30, width: 250, backgroundColor: \" #364d79\", color: \"white\" }}\r\n            >\r\n                {value}\r\n            </Button>)\r\n        },\r\n    ] as any;\r\n\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Col xs={{ span: 23 }} className=\"padding-10\">\r\n                <CustomCarousel />\r\n            </Col>\r\n            <Col className=\"map-shadow margin border-radius-10\" md={{ span: 10 }} xs={{ span: 22 }}>\r\n\r\n                <div\r\n                    className=\"background-color-blue\"\r\n                //  style={{ backgroundColor: \"#70a1ff\" }}\r\n                >\r\n                    <div\r\n                        style={{ color: \"white\" }}\r\n                        className=\"padding-top-5 font-size-24\"\r\n                    >\r\n                        Search: &nbsp;\r\n                        <Input\r\n                            style={{ width: 250, borderRadius: 30 }}\r\n                            onChange={(e: any) => searchToCompetition(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Table\r\n                        className=\"center background-color-blue padding-10\"\r\n                        // style={{ height: \"100%\" }}\r\n                        bordered={true}\r\n                        pagination={{ pageSize: 10 }}\r\n                        dataSource={searchedCompetitions.length > 0 ? searchedCompetitions : competitions}\r\n                        columns={columns}\r\n                        scroll={{ x: 500 }}\r\n                        rowKey={(row: any) => row.name}\r\n                    />\r\n                </div>\r\n            </Col>\r\n            <Col className=\"map-shadow margin border-radius-10\" style={{ backgroundColor: \"white\" }} md={{ span: 12 }} xs={{ span: 22 }}>\r\n                <FootballHistory />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ViewCountryLeagues\r\n\r\n\r\n","import { Button } from 'antd'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst GobackButton = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"center margin\" style={{ paddingBottom: 10 }}>\r\n            <Button onClick={() => history.goBack()} type=\"primary\" style={{\r\n                borderRadius: 30, width: 200,\r\n                //  backgroundColor: \"rgba(75, 192, 192, 0.9)\"\r\n            }}> Go Back</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GobackButton\r\n","import { Button, Table } from 'antd';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { getStandingById } from '../../Api/football-API';\r\nimport { CaretDownFilled, CaretUpFilled, FolderOpenFilled, FolderOpenTwoTone, MinusCircleFilled } from \"@ant-design/icons\"\r\nimport GobackButton from '../CustomComponents/GobackButton';\r\n\r\nconst ViewLeagueStanding = () => {\r\n    const { id } = useParams() as any;\r\n\r\n    const history = useHistory();\r\n\r\n    const [data, setData] = useState<any>([]);\r\n    useEffect(() => {\r\n        const callStandingsById = async () => {\r\n            const [error, data] = await getStandingById(id);\r\n            if (!error) {\r\n                setData(data);\r\n            }\r\n        }\r\n        callStandingsById();\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Rank',\r\n            dataIndex: 'position',\r\n            key: 'position',\r\n            sorter: (a: any, b: any) => a.position - b.position,\r\n            // render: (value: string, record: any) => <span> {record.position} {value} </span>\r\n        },\r\n        {\r\n            title: 'Team Name',\r\n            dataIndex: 'team_name',\r\n            key: 'team_name',\r\n            width: 200,\r\n            // sorter: (a: any, b: any) => a.team_name - b.team_name,\r\n            render: (value: string, record: any) => <span className=\"font-size-20\"> {value} </span>\r\n        },\r\n        {\r\n            title: 'Match Played',\r\n            dataIndex: 'overall_gp',\r\n            key: 'overall_gp',\r\n            width: 200,\r\n            sorter: (a: any, b: any) => a.overall_gp - b.overall_gp,\r\n        },\r\n        {\r\n            title: 'Win',\r\n            dataIndex: 'overall_w',\r\n            key: 'overall_w',\r\n            sorter: (a: any, b: any) => a.overall_w - b.overall_w,\r\n            render: (value: string) => <span style={{ color: \"green\" }}>{value}</span>\r\n        },\r\n        {\r\n            title: 'Draw',\r\n            dataIndex: 'overall_d',\r\n            key: 'overall_d',\r\n            sorter: (a: any, b: any) => a.overall_d - b.overall_d,\r\n            render: (value: string) => <span style={{ color: \"gray\" }}>{value}</span>\r\n        },\r\n        {\r\n            title: 'Lose',\r\n            dataIndex: 'overall_l',\r\n            key: 'overall_l',\r\n            sorter: (a: any, b: any) => a.overall_l - b.overall_l,\r\n            render: (value: string) => <span style={{ color: \"red\" }}>{value}</span>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 150,\r\n            render: (value: string) => (\r\n                <span>\r\n                    {value === \"up\" ? <span style={{ color: \"green\" }}> &nbsp; <CaretUpFilled translate={undefined} /> &nbsp; Up</span> : \"\"}\r\n                    {value === \"same\" ? <span style={{ color: \"gray\" }}> &nbsp; <MinusCircleFilled translate={undefined} /> &nbsp; Same </span> : \"\"}\r\n                    {value === \"down\" ? <span style={{ color: \"red\" }}> &nbsp; <CaretDownFilled translate={undefined} /> &nbsp; Down</span> : \"\"}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Points',\r\n            dataIndex: 'points',\r\n            key: 'points',\r\n            sorter: (a: any, b: any) => a.points - b.points,\r\n        },\r\n        {\r\n            title: 'Round',\r\n            dataIndex: 'round',\r\n            key: 'round',\r\n        },\r\n        {\r\n            title: 'Team Information',\r\n            dataIndex: 'x',\r\n            key: 'x',\r\n            width: 200,\r\n            render: (_: string, record: any) => (<Button\r\n                type=\"primary\"\r\n                onClick={() => history.push(`/teaminfo/${record.team_id}`)}\r\n                style={{ borderRadius: 30, width: 100 }}\r\n            >\r\n                <FolderOpenFilled />\r\n            </Button>)\r\n        },\r\n    ] as any;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"map-shadow margin border-radius-10  background-color-blue\">\r\n                {\r\n                    data.length > 0 &&\r\n                    (\r\n                        <div\r\n                            style={{ color: \"white\" }}\r\n                            className=\"padding-10 font-size-20\"\r\n                        >\r\n                            <span> {data[0].country ? data[0].country : \"\"} </span>\r\n                            &nbsp;\r\n                            <span> Season:  {data[0].season ? data[0].season : \"\"}  </span>\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <Table\r\n                    className=\"center padding-10\"\r\n                    bordered={true}\r\n                    pagination={{ pageSize: 10 }}\r\n                    dataSource={data}\r\n                    columns={columns}\r\n                    scroll={{ x: 500 }}\r\n                    rowKey={(row: any) => row.name}\r\n                />\r\n            </div>\r\n            <GobackButton />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewLeagueStanding\r\n","import { FolderOpenFilled } from '@ant-design/icons';\r\nimport { Button, Table, Tabs } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { getTeamById } from '../../Api/football-API';\r\nimport GobackButton from '../CustomComponents/GobackButton';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ViewTeamInformation = () => {\r\n    const { teamId } = useParams() as any;\r\n    const history = useHistory();\r\n    const [teamData, setTeamData] = useState<any>();\r\n    useEffect(() => {\r\n        const callTeamInfoById = async (teamId: string) => {\r\n            const [error, data] = await getTeamById(teamId);\r\n            if (!error) {\r\n                setTeamData(data[0]);\r\n            }\r\n        }\r\n        callTeamInfoById(teamId);\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Player Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 200,\r\n            sorter: (a: any, b: any) => a.name - b.name,\r\n        },\r\n        {\r\n            title: 'Player Number',\r\n            dataIndex: 'number',\r\n            key: 'number',\r\n            width: 200,\r\n            sorter: (a: any, b: any) => a.number - b.number,\r\n        },\r\n        {\r\n            title: 'Position',\r\n            dataIndex: 'position',\r\n            key: 'position',\r\n            sorter: (a: any, b: any) => a.position - b.position,\r\n            render: (value: string) => (<span>\r\n                {value === \"G\" ? \"Goalkeeper\" : null}\r\n                {value === \"A\" ? \"Attacker\" : null}\r\n                {value === \"D\" ? \"Defender\" : null}\r\n                {value === \"M\" ? \"Midfielder\" : null}\r\n            </span>)\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            sorter: (a: any, b: any) => a.age - b.age,\r\n        },\r\n        {\r\n            title: 'Appearences',\r\n            dataIndex: 'appearences',\r\n            key: 'appearences',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.appearences - b.appearences,\r\n        },\r\n        {\r\n            title: 'Goals',\r\n            dataIndex: 'goals',\r\n            key: 'goals',\r\n            sorter: (a: any, b: any) => a.goals - b.goals,\r\n        },\r\n        {\r\n            title: 'Assists',\r\n            dataIndex: 'assists',\r\n            key: 'assists',\r\n            sorter: (a: any, b: any) => a.assists - b.assists,\r\n        },\r\n        {\r\n            title: 'Injured',\r\n            dataIndex: 'injured',\r\n            key: 'injured',\r\n            sorter: (a: any, b: any) => a.injured - b.injured,\r\n        },\r\n        {\r\n            title: 'Minutes Played',\r\n            dataIndex: 'minutes',\r\n            key: 'minutes',\r\n            width: 200,\r\n            sorter: (a: any, b: any) => a.minutes - b.minutes,\r\n        },\r\n        {\r\n            title: 'Yellow Cards',\r\n            dataIndex: 'yellowcards',\r\n            key: 'yellowcards',\r\n            sorter: (a: any, b: any) => a.yellowcards - b.yellowcards,\r\n            width: 150,\r\n            render: (value: string) => (\r\n                <span style={{ color: \"#ffa502\" }}>\r\n                    {value}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Red Cards',\r\n            dataIndex: 'redcards',\r\n            key: 'redcards',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.redcards - b.redcards,\r\n            render: (value: string) => (\r\n                <span style={{ color: \"red\" }}>\r\n                    {value}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Player Information',\r\n            dataIndex: 'x',\r\n            key: 'x',\r\n            width: 200,\r\n            render: (_: string, record: any) => (<Button\r\n                type=\"primary\"\r\n                onClick={() => history.push(`/playerinfo/${record.id}`)}\r\n                style={{ borderRadius: 30, width: 100 }}\r\n            >\r\n                <FolderOpenFilled />\r\n            </Button>)\r\n        },\r\n\r\n    ] as any;\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                teamData && (\r\n                    <>\r\n                        <div className=\"map-shadow margin border-radius-10 \">\r\n                            <div className=\"padding-20\">\r\n                                Team Information :\r\n                                <Tabs defaultActiveKey=\"1\" >\r\n                                    <TabPane tab=\"Founded\" key=\"1\">\r\n                                        {teamData.founded}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Is it national?\" key=\"2\">\r\n                                        {teamData.is_national === \"False\" ? \"No it's not\" : \"Yes it is\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Leagues\" key=\"3\">\r\n\r\n                                        {teamData.leagues.length > 0 ?\r\n                                            teamData.leagues.map((league: any) => <span key={league.coach_name}> {league} &nbsp; </span>) : \"No Leagues Yet\"\r\n                                        }\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Coach Name\" key=\"4\">\r\n                                        {teamData.coach_name}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"City\" key=\"5\">\r\n                                        {teamData.venue_city}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Address\" key=\"6\">\r\n                                        {teamData.venue_address}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Stadium\" key=\"7\">\r\n                                        {teamData.venue_name}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Field Surface\" key=\"8\">\r\n                                        {teamData.venue_surface}\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"map-shadow margin border-radius-10 background-color-blue\">\r\n                            <div style={{ color: \"white\" }}\r\n                                className=\"padding-10 font-size-20\">\r\n                                Team Players :\r\n                                <Table\r\n                                    className=\"center\"\r\n                                    bordered={true}\r\n                                    pagination={{ pageSize: 10 }}\r\n                                    dataSource={teamData.squad}\r\n                                    columns={columns}\r\n                                    scroll={{ x: 500 }}\r\n                                    rowKey={(row: any) => row.name}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <GobackButton />\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewTeamInformation\r\n","import { Table, Tabs } from 'antd';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { getPlayerById } from '../../Api/football-API';\r\nimport GobackButton from '../CustomComponents/GobackButton';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ViewPlayerInfo = () => {\r\n    const { playerId } = useParams() as any;\r\n    const [playerInfo, setPlayerInfo] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        const callPlayerById = async (id: string) => {\r\n            const [error, data] = await getPlayerById(id);\r\n            if (!error) {\r\n                setPlayerInfo(data[0]);\r\n            }\r\n        }\r\n        callPlayerById(playerId);\r\n    }, []);\r\n\r\n    const clubColumns = [\r\n        {\r\n            title: 'Club Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 200,\r\n            sorter: (a: any, b: any) => a.name - b.name,\r\n        },\r\n        {\r\n            title: 'League',\r\n            dataIndex: 'league',\r\n            key: 'league',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.league - b.league,\r\n        },\r\n        {\r\n            title: 'Season',\r\n            dataIndex: 'season',\r\n            key: 'season',\r\n            sorter: (a: any, b: any) => a.season - b.season,\r\n        },\r\n        {\r\n            title: 'Appearances',\r\n            dataIndex: 'appearances',\r\n            key: 'appearances',\r\n            sorter: (a: any, b: any) => a.appearances - b.appearances,\r\n        },\r\n        {\r\n            title: 'Goals',\r\n            dataIndex: 'goals',\r\n            key: 'goals',\r\n            sorter: (a: any, b: any) => a.goals - b.goals,\r\n        },\r\n        {\r\n            title: 'Yellow Cards',\r\n            dataIndex: 'yellowcards',\r\n            key: 'yellowcards',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.yellowcards - b.yellowcards,\r\n            render: (value: string) => (\r\n                <span style={{ color: \"#ffa502\" }}>\r\n                    {value}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Red Cards',\r\n            dataIndex: 'redcards',\r\n            key: 'redcards',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.redcards - b.redcards,\r\n            render: (value: string) => (\r\n                <span style={{ color: \"red\" }}>\r\n                    {value}\r\n                </span>\r\n            )\r\n        }\r\n    ] as any;\r\n\r\n\r\n    const transferColumns = [\r\n        {\r\n            title: 'From',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            width: 200,\r\n            sorter: (a: any, b: any) => a.from - b.from,\r\n        },\r\n        {\r\n            title: 'To',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.to - b.to,\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.date - b.date,\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            width: 150,\r\n            sorter: (a: any, b: any) => a.type - b.type,\r\n        },\r\n    ] as any;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                playerInfo && (\r\n                    <>\r\n\r\n                        <div className=\"map-shadow margin border-radius-10\">\r\n                            <div className=\"padding-20\">\r\n                                <Tabs defaultActiveKey=\"1\" >\r\n                                    <TabPane tab=\"First Name\" key=\"1\">\r\n                                        {playerInfo.firstname ? playerInfo.firstname : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Last Name\" key=\"2\">\r\n                                        {playerInfo.lastname ? playerInfo.lastname : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Common Name\" key=\"3\">\r\n                                        {playerInfo.common_name ? playerInfo.common_name : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Nationality\" key=\"4\">\r\n                                        {playerInfo.nationality ? playerInfo.nationality : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Birth Date\" key=\"5\">\r\n                                        {playerInfo.birthdate ? playerInfo.birthdate : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Birth Country\" key=\"6\">\r\n                                        {playerInfo.birthcountry ? playerInfo.birthcountry : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Birth Place\" key=\"7\">\r\n                                        {playerInfo.birthplace ? playerInfo.birthplace : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Age\" key=\"8\">\r\n                                        {playerInfo.age ? playerInfo.age : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Height\" key=\"9\">\r\n                                        {playerInfo.height ? playerInfo.height : \"\"}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Position\" key=\"10\">\r\n                                        {playerInfo.position ? playerInfo.position : \"\"}\r\n                                    </TabPane>\r\n                                </Tabs>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"map-shadow margin border-radius-10\">\r\n                            <div className=\"padding-20\">\r\n                                Player Statistics\r\n                                <Tabs defaultActiveKey=\"1\" >\r\n                                    <TabPane tab=\"History with clubs\" key=\"1\">\r\n                                        <Table\r\n                                            className=\"center padding-10\"\r\n                                            bordered={true}\r\n                                            pagination={{ pageSize: 6 }}\r\n                                            dataSource={playerInfo.player_statistics.club ? playerInfo.player_statistics.club : []}\r\n                                            columns={clubColumns}\r\n                                            scroll={{ x: 500 }}\r\n                                            rowKey={(row: any) => row.name}\r\n                                        />\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Cups\" key=\"2\">\r\n                                        <Table\r\n                                            className=\"center padding-10\"\r\n                                            bordered={true}\r\n                                            pagination={{ pageSize: 6 }}\r\n                                            dataSource={playerInfo.player_statistics.cups ? playerInfo.player_statistics.cups : []}\r\n                                            columns={clubColumns}\r\n                                            scroll={{ x: 500 }}\r\n                                            rowKey={(row: any) => row.name}\r\n                                        />\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"National Team\" key=\"3\">\r\n                                        <Table\r\n                                            className=\"center padding-10\"\r\n                                            bordered={true}\r\n                                            pagination={{ pageSize: 6 }}\r\n                                            dataSource={playerInfo.player_statistics.national ? playerInfo.player_statistics.national : []}\r\n                                            columns={clubColumns}\r\n                                            scroll={{ x: 500 }}\r\n                                            rowKey={(row: any) => row.name}\r\n                                        />\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Transfers\" key=\"4\">\r\n                                        <Table\r\n                                            className=\"center padding-10\"\r\n                                            bordered={true}\r\n                                            pagination={{ pageSize: 6 }}\r\n                                            dataSource={playerInfo.transfers ? playerInfo.transfers : []}\r\n                                            columns={transferColumns}\r\n                                            scroll={{ x: 500 }}\r\n                                            rowKey={(row: any) => row.name}\r\n                                        />\r\n                                    </TabPane>\r\n                                </Tabs>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </>\r\n                )\r\n            }\r\n            <GobackButton />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewPlayerInfo\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport ViewHeader from './Components/Header/ViewHeader';\nimport ViewCountryLeagues from './Components/CountriesLeagues/ViewCountryLeagues';\nimport ViewLeagueStanding from './Components/LeaguesStanding/ViewLeagueStanding';\nimport ViewTeamInformation from './Components/TeamInformation/ViewTeamInformation';\nimport ViewPlayerInfo from './Components/PlayerInfo/ViewPlayerInfo';\n\n\nfunction App() {\n\n  const [events, setEvents] = useState([]);\n\n  const requestEvents = async () => {\n\n    // const [error, data] = await getAllEvents();\n\n    // if (error) {\n    //   message.error(\"sorry we had an error, we'll try again.\");\n    //   //   requestEvents();\n    // }\n    // setEvents(data);\n  }\n\n  useEffect(() => {\n    requestEvents();\n  }, []);\n  return (\n    <>\n      <ViewHeader />\n      <Router>\n        <Switch>\n          <Route path=\"/playerinfo/:playerId\" exact>\n            <ViewPlayerInfo />\n          </Route>\n          <Route path=\"/standings/:id\" exact>\n            <ViewLeagueStanding />\n          </Route>\n          <Route path=\"/teaminfo/:teamId\" exact>\n            <ViewTeamInformation />\n          </Route>\n          <Route path=\"/\">\n            <ViewCountryLeagues />\n          </Route>\n        </Switch>\n      </Router>\n    </>);\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  //  <Provider store ={store}>\n  <App />\n  // </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}